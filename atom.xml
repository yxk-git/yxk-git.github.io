<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>念你是头猪</title>
  
  <subtitle>胸中自有青山在，何必随人看桃花。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-04T13:52:00.707Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>康帅傅</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2019/07/04/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/07/04/我的第一篇博客/</id>
    <published>2019-07-04T13:52:00.000Z</published>
    <updated>2019-07-04T13:52:00.707Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《第一篇博客》</title>
    <link href="http://yoursite.com/2019/07/02/hello-world/"/>
    <id>http://yoursite.com/2019/07/02/hello-world/</id>
    <published>2019-07-02T15:05:57.103Z</published>
    <updated>2019-07-06T03:56:55.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抽象类和继承"><a href="#抽象类和继承" class="headerlink" title="抽象类和继承"></a>抽象类和继承</h1><hr><p>继承(extends):子类自动拥有父类的所有非私有成员,可以直接调用.<br>    特点: 1.单一继承.<br>          2.多层继承.<br>          3.所有都直接或者间接继承Object类(根类).<br>    注意: 1.若子类和父类的成员名相同时,优先调用子类成员(就近原则);若需要调用父类成员,使用super关键字.<br>          2.当父类时抽象类时,子类需要重写父类中的所有抽象方法或者子类也声明为抽象类.</p><hr><hr><p>抽象类(abstract)<br>    使用: 1.抽象类不能创建对象(不能实例化).<br>          2.抽象类天生就是被继承的.<br>          3.继承抽象类的子类必须重写父类的所有抽象方法,否则子类也是抽象类,使用abstract修饰.<br>    注意: 1.抽象类不能创建对象.<br>          2.抽象类中有构造方法.<br>          3.抽象类中不一定有抽象方法,但是有抽象方法的类一定是抽象类.<br>          4.子类需要重写抽象类中的所有抽象方法或者子类也声明为抽象类.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;抽象类和继承&quot;&gt;&lt;a href=&quot;#抽象类和继承&quot; class=&quot;headerlink&quot; title=&quot;抽象类和继承&quot;&gt;&lt;/a&gt;抽象类和继承&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;继承(extends):子类自动拥有父类的所有非私有成员,可以直接调用.&lt;br&gt;    特点: 1
      
    
    </summary>
    
    
  </entry>
  
</feed>
